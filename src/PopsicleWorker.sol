// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import "./interfaces/PopsicleInterfaces.sol";

contract PopsicleWorker {
    IUSDT private constant USDT = IUSDT(0xdAC17F958D2ee523a2206206994597C13D831ec7);
    
   function collect(address popsicle, uint256 amount0, uint256 amount1) external {
        IFragola(popsicle).collectFees(amount0, amount1);
   } 

   function transferTokens(address token, address dst) external {
        if(token == address(USDT)) {
            IUSDT(token).transfer(dst, IUSDT(token).balanceOf(address(this)));
        } else {
            IERC20Like(token).transfer(dst, IERC20Like(token).balanceOf(address(this)));
        }
   }
}
