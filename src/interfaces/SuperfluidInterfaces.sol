// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import "./TokenInterfaces.sol";

interface ISuperfluidToken {}
interface ISuperToken is ISuperfluidToken, IERC20Like {}

interface ISuperAgreement {}

interface ISuperfluid {
    function callAgreement(
         ISuperAgreement agreementClass,
         bytes calldata callData,
         bytes calldata userData)
            external
            //cleanCtx
            returns(bytes memory returnedData);
}

interface IInstantDistributionAgreement is ISuperAgreement {
    function createIndex(
        ISuperfluidToken token,
        uint32 indexId,
        bytes calldata ctx)
            external
            returns(bytes memory newCtx);
    function updateSubscription(
        ISuperfluidToken token,
        uint32 indexId,
        address subscriber,
        uint128 units,
        bytes calldata ctx)
            external
            returns(bytes memory newCtx);
    function updateIndex(
        ISuperfluidToken token,
        uint32 indexId,
        uint128 indexValue,
        bytes calldata ctx)
            external
            returns(bytes memory newCtx);
    function claim(
        ISuperfluidToken token,
        address publisher,
        uint32 indexId,
        address subscriber,
        bytes calldata ctx)
            external
            returns(bytes memory newCtx);
}
