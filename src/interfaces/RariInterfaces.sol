// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import "./TokenInterfaces.sol";

interface ICToken {
    function borrow (uint256 borrowAmount) external;
    function underlying() external returns (address);
    function getCash() external returns (uint256);
    function allowance(address owner, address spender) external returns (uint256);
    function approve(address spender, uint256 amount) external;
    function redeemUnderlying(uint256 redeemAmount) external;
}

interface ICErc20 is ICToken {
    function mint(uint256 mintAmount) external;
}

interface ICEther is ICToken{
    function mint(uint256 mintAmount) payable external;
}

interface IComptroller {
    function enterMarkets(address[] calldata fTokens) external;
    function exitMarket(address fTokenAddress) external;
    function cTokensByUnderlying(address input) external returns (address);
    function getAccountLiquidity(address account) external returns (uint256, uint256, uint256);
}
interface IVault {
    function flashLoan (
        address recipient, 
        IERC20Like[] memory tokens, 
        uint256[] memory amounts, 
        bytes memory userData
    ) external;
}
