// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import "./TokenInterfaces.sol";

interface IFragola is IERC20Like {
    function deposit(
        uint256 amount0Desired,
        uint256 amount1Desired
    ) external payable returns (uint256 shares, uint256 amount0, uint256 amount1);
    function collectFees(uint256 amount0, uint256 amount1) external;
    function withdraw(uint256 amount) external returns (uint256 amount0, uint256 amount1);
    function userInfo(address input) external returns (uint256 token0Rewards, uint256 token1Rewards, uint256 token0PerSharePaid, uint256 token1PerSharePaid);
    function token0() external returns (address addr0);
    function token1() external returns (address addr1);
    function tickLower() external returns (int24 tick0);
    function tickUpper() external returns (int24 tick1);
    function pool() external returns (address uniPool);
    function position() external returns (uint128 liquidity, uint256 feeGrowthInside0LastX128, uint256 feeGrowthInside1LastX128, uint128 tokensOwed0, uint128 tokensOwed1);
}

interface IUniswapV3Pool {
     function slot0() external returns (uint160 sqrtPriceX96, int24 tick, uint16 observationIndex, uint16 observationCardinality, uint16 observationCardinalityNext, uint8 feeProtocol, bool unlocked);
}

interface IAave {
    function flashLoan(
        address receiverAddress,
        address[] memory assets,
        uint256[] memory amounts,
        uint256[] memory modes,
        address onBehalfOf,
        bytes memory params,
        uint16 referralCode
    ) external;
}
