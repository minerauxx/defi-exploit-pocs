// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import "./TokenInterfaces.sol";

interface IAave {
    function flashLoan(
        address receiverAddress,
        address[] memory assets,
        uint256[] memory amounts,
        uint256[] memory modes,
        address onBehalfOf,
        bytes memory params,
        uint16 referralCode
    ) external;
}

interface ICurvePool {
    function add_liquidity(uint256[3] memory amounts, uint256 min_mint_amount) external;
    function remove_liquidity_one_coin(uint256 _token_amount, int128 i, uint256 min_amount) external;
}

interface ICurveRouter {
    function exchange(
        address _pool,
        address _from,
        address _to,
        uint256 _amount,
        uint256 _expected,
        address _receiver
    ) external payable;
}

interface IYVault is IERC20Like {
    function deposit(uint256 _amount, address recipient) external;
}

interface ICErc20 {
    function mint(uint256 mintAmount) external;
    function borrow (uint256 borrowAmount) external;
}

interface IComptroller {
    function enterMarkets(address[] calldata cTokens) external;
}

interface IFeed {
    function latestAnswer() external returns (uint256);
}
