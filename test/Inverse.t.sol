// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/InverseExploiter.sol";

contract InverseTest is Test {
    IERC20Like private constant WBTC = IERC20Like(0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599);
    IUSDT private constant USDT = IUSDT(0xdAC17F958D2ee523a2206206994597C13D831ec7);

    InverseExploiter exploiter;

    function setUp() public {
        vm.createSelectFork(vm.rpcUrl("mainnet"), 14972418);

        exploiter = new InverseExploiter(); 
    }

    function testExploit() public {
        exploiter.exploit();

        assertTrue(WBTC.balanceOf(address(exploiter)) > 53e8);
        assertTrue(USDT.balanceOf(address(exploiter)) > 99_970e6);
    }
}
